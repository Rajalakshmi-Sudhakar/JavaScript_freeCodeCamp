** start of undefined **

<!DOCTYPE html>
<html lang="en">
  <head>
    <link rel="stylesheet" href="styles.css"><title>CashRegisterProject</title></head>
  <body>
    <div align="center">
      <label >Enter Cash From Customer</label> 
      <input type = "text" placeholder="customer cash" id="cash" onfocus="onFocus()"/><br><br>
<button type="submit" id="purchase-btn">Purchase</button>
    </div>
    <div class="TotalChange" id="change-due">

      </div>
    <script src = "script.js">

    </script>
  </body>
</html>

** end of undefined **

** start of undefined **

let changeArr = [];
let totalChange = 0;
let totalCID = 0;
let price = 19.5;
let cid = [
 ["PENNY", 0.5], 
 ["NICKEL", 0], 
 ["DIME", 0], 
 ["QUARTER", 0], 
 ["ONE", 0], 
 ["FIVE", 0], 
 ["TEN", 0], 
 ["TWENTY", 0], 
 ["ONE HUNDRED", 0]];

const customerCash = document.getElementById("cash");
const purchase = document.getElementById("purchase-btn");
const change = document.getElementById("change-due");


function onFocus(){
  customerCash.value = "";
  change.textContent = "";  
}

purchase.addEventListener("click",()=>{  
  changeArr = [];
  totalChange = 0;
  change.textContent = "";
  let cash = customerCash.value;
  
      let currencyUnit = [
        ["PENNY", 0.01],
        ["NICKEL", 0.05],
        ["DIME", 0.10],
        ["QUARTER", 0.25],
        ["ONE", 1.00],
        ["FIVE", 5.00],
        ["TEN", 10.00],
        ["TWENTY", 20.00],
        ["ONE HUNDRED", 100.00]
    ];

  // create change string array
const createChangeString = () => {
  let changeString = '';  
  for(let i=0;i<changeArr.length;i++){
    if(changeArr[i][1]>0){
      changeString += `${changeArr[i][0]}: $${changeArr[i][1]} `;
      
    }
  }
  console.log(`Change string ${changeString}` );
  return changeString;
}

/*function getTotalValue(cid) {
    return cid.reduce((total, [unit, amount]) => Number(total) + Number(amount), 0);
    //return (Number(cidValue).toFixed(2));
}*/

  if(cash > price){
    totalChange = (cash-price).toFixed(2);
    //totalCID = getTotalValue(cid);
    let totalCID = cid.reduce((acc, curr) => acc + curr[1], 0).toFixed(2);
    totalCID = parseFloat(totalCID);
    console.log(`Total value in cash drawer: $${totalCID} , Total change to be given: ${totalChange}`);

   
    if(totalCID >= totalChange) {
      cid = cid.reverse();
      currencyUnit = currencyUnit.reverse();
      console.log("CID",cid);
        
        let coinName="";
        let coinValue=0;
        let coinsToReturn = 0;
      for (let i = 0; i < currencyUnit.length; i++) {
        if(totalChange != 0){
        console.log ('The :', cid[i][0])
        coinName = currencyUnit[i][0];
        coinValue = currencyUnit[i][1];
        let coinTotal = cid[i][1];
        let coinAmount = (coinTotal / coinValue).toFixed(2);
        
        console.log(`coinName: ${coinName} , coinValue: ${coinValue} ,coinTotal: ${coinTotal} , coinAmount: ${coinAmount}`);

        while (totalChange >= coinValue && coinTotal > 0) {
          console.log (' while loop for:', cid[i][0])
            totalChange -= coinValue;
            totalChange = totalChange.toFixed(2); 
            coinTotal -= coinValue;
            //TODO:Redue the CID array value
            coinsToReturn++;
            totalCID -= coinValue;
            //totalCID = totalCID.toFixed(2);
            console.log(`inside while totalChange: ${totalChange}, coins to return: ${coinsToReturn} total cid: ${totalCID}`);
        }
      

console.log(`outside while totalChange: ${totalChange}, coins to return: ${coinsToReturn} total cash left in drawer: ${totalCID.toFixed(2)}`);

        if (coinsToReturn > 0) {
            changeArr.push([coinName, coinsToReturn * coinValue.toFixed(2)]);
            //changeArr.sort((a,b) => b[1]-a[1]);
            
        }
      coinsToReturn = 0;
        }}
  changeArr = changeArr.sort((a, b) => b[1] - a[1])
  console.log(`changeArr: ${changeArr}`);
        // If the remaining change is not 0, it means we couldn't provide the exact change
      if (totalChange > 0) {
          change.textContent = "Status: INSUFFICIENT_FUNDS";
      } else {
        if(totalCID.toFixed(2)>0.00){
          change.textContent = "Status: OPEN " + createChangeString().trim();}
          else{
            console.log("totalCashInDrawer is zero,else block entered")
            change.textContent = "Status: CLOSED " + createChangeString().trim();}
          }

      }
      /*else if (totalCID == totalChange){
    change.textContent ="Status: CLOSED "+ createChangeString().trim();
    }*/
    else {
      change.textContent ="Status: INSUFFICIENT_FUNDS";
    }}
    

  
  else if(cash == price){
    change.textContent = "No change due - customer paid with exact cash";
  }
  else{
    alert("Customer does not have enough money to purchase the item");
  }

});


** end of undefined **

** start of undefined **

.TotalChange {
  border: double;
  align: center;
  text-align: center;
}
span{
  border: 4px double blue;
  text-align: center;
}
p{
  border: solid;
  text-align: center;
}

** end of undefined **

